name: Build for all platforms

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  Linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Build x86_64 and ARM
      run: |
        docker build -t bliss-mixer - < docker/Dockerfile
        docker run --rm -v $PWD/target:/build -v $PWD:/src bliss-mixer

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: bliss-mixer-linux
        path: releases/

  macOS:
    runs-on: macos-11.0

    steps:
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Rust support for ARM64 & prepare environment
      run: |
        rustup target add aarch64-apple-darwin
        mkdir releases

    - name: Build
      run: |
        cargo build --release
        strip target/release/bliss-mixer
        cp target/release/bliss-mixer releases/bliss-mixer-x86_64
        cargo build --target=aarch64-apple-darwin --release
        strip target/aarch64-apple-darwin/release/bliss-mixer
        cp target/aarch64-apple-darwin/release/bliss-mixer releases/bliss-mixer-arm64

    - name: Build fat binary
      run: |
        lipo -create \
          -arch x86_64 releases/bliss-mixer-x86_64 \
          -arch arm64 releases/bliss-mixer-arm64 \
          -output releases/bliss-mixer

    - name: Remove ununsed binaries
      run:
        rm releases/bliss-mixer-x86_64 releases/bliss-mixer-arm64

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: bliss-mixer-mac
        path: releases/

  Windows:
    runs-on: windows-2019

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      run: cargo build --release

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: bliss-mixer.exe
        path: target/release/bliss-mixer.exe
